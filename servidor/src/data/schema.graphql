    type Cliente {
        id: ID
        nombre: String
        apellido1: String
        apellido2: String
        empresa: String
        email: String
        edad: Int
        tipo: TipoCliente
        cursos: [Curso]
    }
    type Email{
        email: String
    }
    type Curso{
        titulo: String
        duracion: Int
    }
""" Asigna la categoria del cliente """
    enum TipoCliente{
        DIRECTOR
        COMANDANTE
        ENCARGADO
        OFICIAL
    }
""" Query para consultar clientes o por ID """
    type Query {
        getClientes(limite: Int) : [Cliente]
        getCliente(id: ID) : Cliente
    }
""" Anotacion de nuevos correos """
    input EmailInput{
        email: String
    }
""" Ingreso de nuevos cursos """
    input CursoInput{
        titulo: String
        duracion: Int
    }
""" Campos para clientes nuevos """
    input ClienteInput {
        id: ID
        nombre: String!
        apellido1: String!
        apellido2: String
        empresa: String
        email: String
        edad: Int!
        tipo: TipoCliente!
        cursos: [CursoInput]
    }
""" Mutations para crear nuevos clientes """
    type Mutation {
        crearCliente(input: ClienteInput): Cliente
        actualizarCliente(input: ClienteInput) : Cliente
        eliminarCliente( id: ID) : String
    }